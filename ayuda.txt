Crear imagen docker (solo la primera vez): 
docker build -t laravelserver ./docker/ 

levantar ambiente de desarrollo: 
docker-compose -f ./docker/docker-compose.yml up -d
  
  docker exec -it servidorlr bash


Instalmos laravel:
        composer global require laravel/installer
        
Crearmo el proyecto:
--composer create-project --prefer-dist laravel/laravel:^7.0 ucatolica

-----composer create-project --prefer-dist laravel/laravel ucatolica -*--solo en caso de querer usar la ultima versión

nos movemos de directorio:
cd /var/www/html/ucatolica/ 

damos permisos a la carpetas de laralvel, para su ejecución:
 --docker - linux
chmod -R 777 ./
nos movemos de directorio:
cd /var/www/html/ucatolica/ 

Generamos la autenticación basica de Laravel:
primero instalamos laravel/ui

composer require laravel/ui "^2.0"
Instalamos NPM:
-- Docker -- Linux
apt install npm

segundo bootstrap como ambiente ui:
php artisan ui bootstrap

-- Docker -- Linux
chmod -R 777 ./

npm install 
Luego instalamos el tipo de autenticación
php artisan ui bootstrap --auth

-- Docker -- Linux
chmod -R 777 ./

npm install 
npm run dev
solucionar problema con babel: 
npm install --save-dev gulp-babel @babel/core @babel/preset-env
npm run dev


Antes vamos a nuestro phpmyadmin a crear nuestra base de datos
php artisan migrate:refresh --seed

Autenticación:
https://medium.com/@cvallejo/roles-usuarios-laravel-2e1c6123ad


php artisan make:model Tipo -m

php artisan make:model Categoria -m
        tipo_id

php artisan make:model Marca -m
       

php artisan make:model Producto -m
        marca_id
        categoria_id

php artisan make:model Facturaenc -m

php artisan make:model Facturadet -m
        facturaenc_id
        producto_id

analisis de datos historico - conversar.
investigar sobre indices de base de datos.



En caso de querer generara una nueva llave (ubicarse en la carpeta principal):
php artisan key:generate
ponemos el archivo de configuracion en cache (si lo modificamos, lo tenemos que correr), con el fin de hacer mas rapido su acceso de lectura:
php artisan config:cache

Docker:
https://cerebro-digital.com/panel/knowledgebase/63/Comandos-frecuentes-de-Docker.html

https://github.com/guzzle/guzzle

http://dev-web.refineddata.com/api/ (de interes para muchos que quieran integrarse con moodle)

token: 18c1d7c41dcb8be04fe229254d97d714

http://127.0.0.1:8082/webservice/rest/server.php?wstoken=18c1d7c41dcb8be04fe229254d97d714&wsfunction=core_course_get_courses&moodlewsrestformat=json
http://127.0.0.1:8082/user/editadvanced.php?id=-1


core_course_get_categories
core_course_get_courses
core_course_get_courses_by_field
core_course_get_enrolled_users_by_cmid
core_enrol_get_enrolled_users
core_enrol_get_users_courses
core_group_add_group_members
core_user_update_users
enrol_manual_unenrol_users

core_group_get_course_groups
core_role_assign_roles
core_role_unassign_roles
core_user_create_users
core_user_get_course_user_profiles
core_user_get_users
core_user_get_users_by_field
enrol_manual_enrol_users

instalar ping:
        apt-get update && apt-get install -y iputils-ping

php artisan make:model Matricular -m

php artisan make:seeder MatricularTableSeeder

php artisan migrate:refresh --seed

php artisan make:model Paisesmoodle -m

php artisan make:seeder PaisesmoodleTableSeeder

php artisan make:controller MatriculaController


//npm set audit false
pico .npmrc
fund=false

hacer bk de base de datos mysql (opcional):
cd /compartida
mysqldump -u root -pNuevo123* ucatolicacurso > ucatolicacursov1.sql



